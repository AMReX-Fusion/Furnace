
############################## LOGI INPUTS ###############################################

############################################################################################
# Geometry
############################################################################################

# Non-periodic boundary conditions
geometry.is_periodic = 0 0

# Cartesian coordinate system
geometry.coord_sys = 1

# Lower boundary limits in physical space
geometry.prob_lo =   0.0e0 -5.12e9

# Upper boundary limits in physical space
geometry.prob_hi =  5.12e9  5.12e9

# System center of mass
logi.center    =   0.0e0   0.0e0

############################################################################################
# Boundary conditions
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall
############################################################################################

# Boundary conditions on lo x, y, and z edges
logi.lo_bc = 3 2

# Boundary conditions on hi x, y, and z edges
logi.hi_bc = 2 2

############################################################################################ 
# Timestepping
############################################################################################

# Maximum coarse timestep
max_step = 10000000

# Simulation time to stop at
stop_time = 5.0

# Whether to use our custom stopping criteria
logi.use_stopping_criterion = 1

# CFL number for hyperbolic system
logi.cfl = 0.5

# Fixed level 0 timestep; unused if < 0
logi.fixed_dt = -1.0

# Scale back initial timestep by this factor
logi.init_shrink = 0.01

# Factor by which dt is allowed to change each timestep
logi.change_max = 1.05

# If we regrid on Level 0, compute a new timestep afterward
amr.compute_new_dt_on_regrid = 1

# Use a retry if an advance violated our stability criteria
logi.use_retry = 1

############################################################################################ 
# Resolution, gridding and AMR
############################################################################################

# Number of cells on the coarse grid
amr.n_cell = 512 1024

# Maximum level number allowed
amr.max_level = 0

# Refinement ratio
amr.ref_ratio = 4 4 4 4 4 4 4 4 4

# How many coarse timesteps between regridding
amr.regrid_int = 2

# Allow special regrids based on stability criteria
logi.use_post_step_regrid = 0

# Number of buffer cells in error estimation
amr.n_error_buf = 2 2 2 2 2 2 2 2 2 2

# Maximum grid size at each level
amr.max_grid_size = 256

# Grid sizes must be a multiple of blocking factor
amr.blocking_factor = 16

# What constitutes an efficient grid
amr.grid_eff = 0.9

# Order of reconstruction for interpolation
logi.state_interp_order = 0

# Limiting on state data interpolation (preserve linear combinations)
logi.lin_limit_state_interp = 1

############################################################################################
# Physics to include
############################################################################################

# Whether or not to do hydrodynamics
logi.do_hydro = 1

# Whether or not to do gravity
logi.do_grav = 1

# Whether or not to do reactions
logi.do_react = 1

# Whether or not to apply the sponge
logi.do_sponge = 1

# Whether or not to apply external source terms
logi.add_ext_src = 0
logi.ext_src_implicit = 1

# Whether or not to include the rotation source term
logi.do_rotation = 0

############################################################################################
# PPM/Hydro options
############################################################################################

# Piecewise parabolic with the original limiters (0 is piecewise linear; 2 is new limiters)
logi.ppm_type = 1

# Use the EOS in calculation of the edge states going into the Riemann solver
logi.ppm_temp_fix = 0

# Which Riemann solver to use.
# 0 = Colella, Glaz, and Ferguson (cheaper, less accurate)
# 1 = Colella and Glaz 1985 (more expensive, more accurate)
# 2 = HLL
logi.riemann_solver = 0

# For the CG Riemann solver, we need to tell the solver not to quit when 
# the iterations don't converge, but instead to do additional bisection iteration.
logi.cg_blend = 2

# Limit the maximum speed in the Riemann solver
logi.riemann_speed_limit = 2.99792458e9

# Use a lagged predictor estimate of the source terms in the hydro
logi.source_term_predictor = 1

# Reset (rho*e) if it goes negative in the transverse terms
logi.transverse_reset_rhoe = 1

# Reset rho if it goes negative in the transverse terms
logi.transverse_reset_density = 1

# Explicitly limit fluxes to avoid hitting a negative density
logi.limit_fluxes_on_small_dens = 0

############################################################################################
# Thermodynamics
############################################################################################

# Minimum allowable temperature (K)
logi.small_temp = 1.e5

# Minimum allowable density (g / cm**3)
logi.small_dens = 1.e-5

# Threshold for when to use the internal energy in calculating pressure
logi.dual_energy_eta1 = 1.0e-3

# Threshold for when to use (E - K) in updating internal energy
logi.dual_energy_eta2 = 1.0e-4

# Use Coulomb corrections in Helmholtz EOS
eos.use_eos_coulomb = 1

# Keep EOS inputs constant after EOS evaluation
eos.eos_input_is_constant = 1

# Ambient temperature (K)
logi.ambient_temp = 1.0e7

# Ambient density (g / cm**3)
logi.ambient_density = 1.0e-4

############################################################################################
# Reactions/Network
############################################################################################

# Limit timestep based on nuclear burning considerations (changes in internal energy)
logi.dtnuc_e = 1.e200

# Limit timestep based on nuclear burning considerations (changes in species)
logi.dtnuc_X = 1.e200

# Minimum temperature for allowing nuclear burning
logi.react_T_min = 1.0e8

# Maximum temperature for allowing nuclear burning
logi.react_T_max = 1.0e12

# Minimum density for allowing nuclear burning
logi.react_rho_min = 1.0e6

# Maximum density for allowing nuclear burning
logi.react_rho_max = 1.0e12

# Smallest allowable mass fraction
network.small_x = 1.0e-12

# Burn at constant volume
integrator.do_constant_volume_burn = 1

# Evaluate the RHS during the burn
integrator.call_eos_in_rhs = 1

# Integration tolerances
integrator.rtol_spec = 1.0e-6
integrator.atol_spec = 1.0e-6

integrator.rtol_enuc = 1.0e-6
integrator.atol_enuc = 1.0e-6

# Do not abort or retry on a failed burn (Logi will handle this)
integrator.abort_on_failure = 0
integrator.retry_burn = 0

# Renormalize abundances during the burn
integrator.renormalize_abundances = 1

# Maximum temperature allowed in the burn
integrator.MAX_TEMP = 1.0e10

# Use tabular rate evaluation when availble
network.use_tables = 1

############################################################################################
# Gravity
############################################################################################

# Full self-gravity with the Poisson equation
gravity.gravity_type = PoissonGrav

# Multipole expansion includes terms up to r**(-max_multipole_order)
gravity.max_multipole_order = 6

# Tolerance for multigrid solver for phi solves
gravity.abs_tol = 1.e-10

# Use sync solve for gravity after refluxing
gravity.no_sync = 0

# Disable the use of the lagged composite correction for the potential
gravity.do_composite_phi_correction = 0

############################################################################################
# Sponge
############################################################################################

logi.sponge_lower_density = 1.0e1
logi.sponge_upper_density = 1.0e1
logi.sponge_timescale     = 0.01e0

############################################################################################
# Load balancing
############################################################################################

# Choice of load balancing strategy to use
DistributionMapping.strategy = KNAPSACK

# Efficiency demanded from the knapsack algorithm
DistributionMapping.efficiency = 0.9

############################################################################################
# Diagnostics and I/O
############################################################################################

# Calculate and print the center of mass at each time step
logi.show_center_of_mass = 0

# Timesteps between computing and printing volume averaged diagnostic quantities
logi.sum_interval = 1

# Simulation time between computing and printing volume averaged diagnostic quantities
logi.sum_per = -1.0

# Whether or not to output plotfiles
amr.plot_files_output = 1

# Whether or not to output checkpoints
amr.checkpoint_files_output = 1

# Root name of checkpoint files
amr.check_file = chk

# We want to store the 'old' state data in checkpoints
logi.dump_old = 1

# Simulation time between checkpoints
amr.check_per = 10.0

# Number of timesteps between checkpoints
amr.check_int = -1

# Root name of plot files
amr.plot_file = plt

# Simulation time between plotfiles
amr.plot_per = 10.0

# Number of timesteps between plotfiles
amr.plot_int = -1

# Root name of small plot files
amr.small_plot_file = smallplt

# Simulation time between small plotfiles
amr.small_plot_per = 1.0

# Number of timesteps between small plotfiles
amr.small_plot_int = -1

# Do not write plotfiles when we dump checkpoints
amr.write_plotfile_with_checkpoint = 0

# Do not write final checkpoint/plotfile
logi.output_at_completion = 0

# Do not write a plotfile or checkpoint on restart
amr.plotfile_on_restart = 0
amr.checkpoint_on_restart = 0

# How often to check whether the run script asked for a checkpoint dump
amr.message_int = 1

# Control verbosity in Amr.cpp
amr.v = 1

# Control verbosity in Logi.cpp
logi.v = 1

# Control verbosity in Gravity.cpp
gravity.v = 1

# State variables to add to plot files
amr.plot_vars = ALL

# Derived variables to add to plot files
amr.derive_plot_vars = NONE

# State variables to add to small plot files
amr.small_plot_vars = density

# Name of the diagnostic sum output files
amr.data_log = grid_diag.out star_diag.out species_diag.out amr_diag.out primary_diag.out secondary_diag.out extrema_diag.out rotation_diag.out

############################################################################################
# Problem parameters
############################################################################################

problem.mass_P = 0.64
problem.mass_S = 0.64

problem.problem = 0

problem.collision_separation = 2.0e0
problem.collision_impact_parameter = 0.0e0

problem.interp_temp = 1

problem.stellar_temp = 1.0e7

problem.orbital_eccentricity = 0.0e0
problem.orbital_angle = 0.0e0

problem.axis_1 = 1
problem.axis_2 = 2

problem.max_stellar_tagging_level = 20
problem.max_temperature_tagging_level = 0
problem.stellar_density_threshold = 1.0e2
problem.temperature_tagging_threshold = 5.0e8
problem.max_tagging_radius = 0.75e0
problem.roche_tagging_factor = 2.0e0

problem.center_fracx = 0.5e0
problem.center_fracy = 0.5e0
problem.center_fracz = 0.5e0
