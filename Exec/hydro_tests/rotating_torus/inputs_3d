# ------------------  INPUTS TO MAIN PROGRAM  -------------------

stop_time = 10.0

# PROBLEM SIZE & GEOMETRY
geometry.is_periodic =  0    0    0
geometry.coord_sys   =  0
geometry.prob_lo     = -2.0 -2.0 -2.0
geometry.prob_hi     =  2.0  2.0  2.0
furnace.center        =  0.0  0.0  0.0

amr.n_cell           =  64   64   64

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall
# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<

furnace.lo_bc       =  5 5 5
furnace.hi_bc       =  5 5 5

# HYDRO

furnace.do_hydro      = 1
furnace.small_temp    = 1.e-10
furnace.small_dens    = 1.e-10

furnace.hybrid_hydro = 1

furnace.limit_fluxes_on_small_dens = 1

furnace.use_retry = 1

furnace.grav_source_type = 4
furnace.rot_source_type = 4

# THERMODYNAMICS

furnace.dual_energy_eta1 = 1.0e-3
furnace.dual_energy_eta2 = 1.0e-4

# GRAVITY

furnace.do_grav           = 1
gravity.gravity_type     = ConstantGrav
gravity.const_grav       = 0.0
furnace.use_point_mass    = 1
furnace.point_mass        = 6.0e8
furnace.point_mass_fix_solution = 0

# ROTATION

furnace.do_rotation       = 0
furnace.rotational_period = 1.0

# TIME STEP CONTROL
furnace.cfl            = 0.5     # cfl number for hyperbolic system
furnace.init_shrink    = 0.1     # scale back initial timestep
furnace.change_max     = 1.05    # scale back initial timestep


# DIAGNOSTICS & VERBOSITY
furnace.sum_interval   = 1       # timesteps between computing mass
furnace.v              = 1       # verbosity in Furnace.cpp
amr.v                 = 1       # verbosity in Amr.cpp

# REFINEMENT / REGRIDDING
amr.max_level       = 0       # maximum level number allowed
amr.ref_ratio       = 2 2 2 2 # refinement ratio
amr.regrid_int      = -1      # how often to regrid
amr.blocking_factor = 8       # block factor in grid generation
amr.max_grid_size   = 32
amr.n_error_buf     = 2 2 2 2 # number of buffer cells in error est

# CHECKPOINT FILES
amr.check_file      = chk_    # root name of checkpoint file
amr.check_int       = 100000  # number of timesteps between checkpoints

# PLOTFILES
amr.plot_file       = plt_    # root name of plotfile
amr.plot_int        = 100000  # number of timesteps between plotfiles
amr.derive_plot_vars = NONE

# problem initialization

problem.inner_radius = 0.75
problme.outer_radius = 1.50

problem.ambient_density = 1.0e-8

# Microphysics

# The polytrope constant is selected so that the maximum density is one,
# given our choices for the torus, the point mass, and gamma. If you change
# them in the setup or the inputs file, you must redo this calculation. We
# compute it statically here so that the C++ and Fortran EOS agree.
#
#  K_const = Gconst * point_mass / (TWO * (ONE + polytrope_index) * density_maximum_radius) * &
#            (ONE - density_maximum_radius**2 / (inner_radius * outer_radius))

eos.polytrope_gamma = 1.333333333
eos.polytrope_K     = 0.5112312382075920

